"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _inherits(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(o&&o.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),o&&_setPrototypeOf(e,o)}function _setPrototypeOf(e,o){return(_setPrototypeOf=Object.setPrototypeOf||function(e,o){return e.__proto__=o,e})(e,o)}function _createSuper(t){var r=_isNativeReflectConstruct();return function(){var e,o=_getPrototypeOf(t);return _possibleConstructorReturn(this,r?(e=_getPrototypeOf(this).constructor,Reflect.construct(o,arguments,e)):o.apply(this,arguments))}}function _possibleConstructorReturn(e,o){if(o&&("object"===_typeof(o)||"function"==typeof o))return o;if(void 0!==o)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,o){for(var t=0;t<o.length;t++){var r=o[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,o,t){return o&&_defineProperties(e.prototype,o),t&&_defineProperties(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}var car1={drive:function(){console.log("Driving")}},car2={drive:function(){console.log("Driving")}};car1.drive(),car2.drive();var Vehicle=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"drive",value:function(){console.log("Driving")}}]),e}(),car3=new Vehicle,car4=new Vehicle;function VehicleOld(){this.drive=function(){console.log("Driving the old way")}}car3.drive(),car4.drive(),console.log("----------"),car3.brand="Volkswagen",console.log(car3),console.log(Vehicle),console.log(Vehicle.prototype),console.log(Vehicle.prototype===car3.__proto__),console.log(car3.__proto__.drive),console.log("----------");var carOld=new VehicleOld;function VehicleOld2(){this.brand="Volkswagen"}carOld.drive(),console.log(carOld),console.log("----------");var carOld2=new VehicleOld2;function VehicleOld3(){this.brand="Volkswagen"}console.log(carOld2),VehicleOld2.brand="Alfa Romeo",console.log(carOld2),console.log("----------"),VehicleOld3.prototype.drive=function(){console.log("Driving")},console.log("----------");var BasicVehicle=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"drive",value:function(){console.log("Driving")}}]),e}(),SuperVehicle=function(){_inherits(o,BasicVehicle);var e=_createSuper(o);function o(){return _classCallCheck(this,o),e.apply(this,arguments)}return _createClass(o,[{key:"brake",value:function(){console.log("Braking")}}]),o}(),basicCar=new BasicVehicle,superCar=new SuperVehicle;superCar.brake(),console.log("----------");var vehicle10={drive:function(){console.log("Driving")}},car10=Object.create(vehicle10);car10.drive();var car11={};Object.setPrototypeOf(car11,vehicle10),car11.drive();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY2FyMSIsImRyaXZlIiwiY29uc29sZSIsImxvZyIsImNhcjIiLCJWZWhpY2xlIiwiY2FyMyIsImNhcjQiLCJWZWhpY2xlT2xkIiwidGhpcyIsInByb3RvdHlwZSIsIl9fcHJvdG9fXyIsImNhck9sZCIsIlZlaGljbGVPbGQyIiwiYnJhbmQiLCJWZWhpY2xlT2xkMyIsIkJhc2ljVmVoaWNsZSIsImJhc2ljQ2FyIiwic3VwZXJDYXIiLCJTdXBlclZlaGljbGUiLCJicmFrZSIsInZlaGljbGUxMCIsImNhcjEwIiwiT2JqZWN0IiwiY3JlYXRlIiwiY2FyMTEiLCJzZXRQcm90b3R5cGVPZiJdLCJtYXBwaW5ncyI6InFuRUFBQSxJQUFNQSxLQUFPLENBQ1pDLE1BRFksV0FFWEMsUUFBUUMsSUFBSSxhQUlSQyxLQUFPLENBQ1pILE1BRFksV0FFWEMsUUFBUUMsSUFBSSxhQUlkSCxLQUFLQyxRQUNMRyxLQUFLSCxRLElBRUNJLFEsMEZBQ0wsV0FDQ0gsUUFBUUMsSUFBSSxlLEtBSVJHLEtBQU8sSUFBSUQsUUFDWEUsS0FBTyxJQUFJRixRQW9CakIsU0FBU0csYUFDUkMsS0FBS1IsTUFBUSxXQUNaQyxRQUFRQyxJQTVCVCx3QkFoQkRHLEtBQU1OLFFBQ0xDLEtBQUFBLFFBRFlDLFFBQWJDLElBQUEsY0FPQ0YsS0FBQUEsTUFEWSxhQUVYQyxRQUFBQSxJQUFRQyxNQUZHRCxRQUFiQyxJQUFBRSxTQU1BTCxRQUFLQyxJQUFMSSxRQUFBSyxXQUNBTixRQUFLSCxJQUFMSSxRQUFBSyxZQUFBSixLQUFBSyxXQXdCQVQsUUF0Qk1HLElBc0JNQyxLQUFLSyxVQUFVVixPQUczQkMsUUFBUUMsSUFBSSxjQVFaLElBQU1TLE9BQVMsSUFBSUosV0FRbkIsU0FBU0ssY0E1QlRYLEtBQUFBLE1BQVksYUFxQlpVLE9BQU9YLFFBQ1BDLFFBQVFDLElBQUlTLFFBMUJaTixRQUFLTCxJQUFMLGNBU0FDLElBQUFBLFFBQVlHLElBQVpRLFlBV0VYLFNBQUFBLGNBQ0FPLEtBRkRLLE1BQUEsYUFURFosUUFBUUMsSUFBSUUsU0FDWkgsWUFBWUcsTUFBUUssYUFFcEJSLFFBQVFDLElBQUlHLFNBS1pKLFFBQUFDLElBQVNLLGNBTVRPLFlBQVlMLFVBQU9GLE1BQW5CLFdBQ0FJLFFBQU9YLElBQVAsWUE4QkFDLFFBQVFDLElBQUksYyxJQXRCWGEsYSwwRkFDQSxXQXlCQ2QsUUFBUUMsSUFBSSxlLEtBcEJkRCxhLHVCQUNBYyxjLG9JQUVBLFdBdUJFZCxRQUFRQyxJQUFJLGUsS0FuQmJjLFNBQWEsSUFBQUQsYUFDYkUsU0FBQSxJQUFBQyxhQXdCREQsU0FBU0UsUUFqQlRsQixRQUFBQyxJQUFBLGNBdUJBLElBQU1rQixVQUFZLENBdEJsQm5CLE1Bc0JrQixXQUVoQkEsUUFBUUMsSUFBSSxhQUlSbUIsTUFBUUMsT0FBT0MsT0FBT0gsV0FDNUJDLE1BQU1yQixRQUVOLElBQU13QixNQUFRLEdBQ2RGLE9BQU9HLGVBN0JORCxNQUFRSixXQUNQbkIsTUFBQUEiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjYXIxID0ge1xyXG5cdGRyaXZlKCkge1xyXG5cdFx0Y29uc29sZS5sb2coJ0RyaXZpbmcnKTtcclxuXHR9LFxyXG59O1xyXG5cclxuY29uc3QgY2FyMiA9IHtcclxuXHRkcml2ZSgpIHtcclxuXHRcdGNvbnNvbGUubG9nKCdEcml2aW5nJyk7XHJcblx0fSxcclxufTtcclxuXHJcbmNhcjEuZHJpdmUoKTtcclxuY2FyMi5kcml2ZSgpO1xyXG5cclxuY2xhc3MgVmVoaWNsZSB7XHJcblx0ZHJpdmUoKSB7XHJcblx0XHRjb25zb2xlLmxvZygnRHJpdmluZycpO1xyXG5cdH1cclxufVxyXG5cclxuY29uc3QgY2FyMyA9IG5ldyBWZWhpY2xlKCk7XHJcbmNvbnN0IGNhcjQgPSBuZXcgVmVoaWNsZSgpO1xyXG5cclxuY2FyMy5kcml2ZSgpO1xyXG5jYXI0LmRyaXZlKCk7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmNvbnNvbGUubG9nKCctLS0tLS0tLS0tJyk7XHJcblxyXG5jYXIzLmJyYW5kID0gJ1ZvbGtzd2FnZW4nO1xyXG5jb25zb2xlLmxvZyhjYXIzKTtcclxuXHJcbmNvbnNvbGUubG9nKFZlaGljbGUpO1xyXG5jb25zb2xlLmxvZyhWZWhpY2xlLnByb3RvdHlwZSk7XHJcbmNvbnNvbGUubG9nKFZlaGljbGUucHJvdG90eXBlID09PSBjYXIzLl9fcHJvdG9fXyk7XHJcblxyXG5jb25zb2xlLmxvZyhjYXIzLl9fcHJvdG9fXy5kcml2ZSk7XHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmNvbnNvbGUubG9nKCctLS0tLS0tLS0tJyk7XHJcblxyXG5mdW5jdGlvbiBWZWhpY2xlT2xkKCkge1xyXG5cdHRoaXMuZHJpdmUgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRjb25zb2xlLmxvZygnRHJpdmluZyB0aGUgb2xkIHdheScpO1xyXG5cdH07XHJcbn1cclxuXHJcbmNvbnN0IGNhck9sZCA9IG5ldyBWZWhpY2xlT2xkKCk7XHJcbmNhck9sZC5kcml2ZSgpO1xyXG5jb25zb2xlLmxvZyhjYXJPbGQpO1xyXG4vLyB3IHR5bSB6YXBpc2llIHcga2HFvGR5bSBvYmllY2tpZSBzdHdvcnpvbnltIG5hIGJhemllIGtvbnN0cnVrdG9yYSAnVmVoaWNsZU9sZCcgem9zdGFqZSB1dHdvcnpvbmEgZnVua2NqYSAnZHJpdmUnLiBDaGPEhWMgasSFIHptaWVuacSHLCB0cnplYmEgYnkgYnnFgm8gcHJ6eXBpc2HEhyBvZCBub3dhIGRlZmluaWNqxJkgdGVqIGZ1bmtjamkgZGxhIGthxbxkZWdvIG9iaWVrdHUgWiBPU09CTkEgKHV0d29yem9uZWdvIG5hIGJhemllIGtvbnN0cnVrdG9yYSAnVmVoaWNsZU9sZCcpXHJcblxyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbmNvbnNvbGUubG9nKCctLS0tLS0tLS0tJyk7XHJcblxyXG5mdW5jdGlvbiBWZWhpY2xlT2xkMigpIHtcclxuXHR0aGlzLmJyYW5kID0gJ1ZvbGtzd2FnZW4nO1xyXG59XHJcblxyXG5jb25zdCBjYXJPbGQyID0gbmV3IFZlaGljbGVPbGQyKCk7XHJcbmNvbnNvbGUubG9nKGNhck9sZDIpO1xyXG5WZWhpY2xlT2xkMi5icmFuZCA9ICdBbGZhIFJvbWVvJztcclxuY29uc29sZS5sb2coY2FyT2xkMik7XHJcbi8vIHN5dHVhY2phIHBvZG9ibmEgamFrIHcgcG9wcnplZG5pbSBwcnp5a8WCYWR6aWUgLSB6bWlhbmEgd2FydG/Fm2NpIGpha2llZ2/FmyBrbHVjemEgdyBrb25zdHJ1a3RvcnplIG5pZSBwb3dvZHVqZSB6bWlhbnkgdGVnbyBrbHVjemEgdyBvYmlla3RhY2ggdXR3b3J6eWNoIHdjemXFm25pZWogKG5hIGJhemllIHRlZ28ga29uc3RydWt0b3JhKVxyXG5cclxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5jb25zb2xlLmxvZygnLS0tLS0tLS0tLScpO1xyXG5cclxuZnVuY3Rpb24gVmVoaWNsZU9sZDMoKSB7XHJcblx0dGhpcy5icmFuZCA9ICdWb2xrc3dhZ2VuJztcclxufVxyXG5cclxuVmVoaWNsZU9sZDMucHJvdG90eXBlLmRyaXZlID0gZnVuY3Rpb24gKCkge1xyXG5cdGNvbnNvbGUubG9nKCdEcml2aW5nJyk7XHJcbn07XHJcbi8vIHByYXdpZMWCb3dhIG1ldG9kYSBkb2Rhd2FuaWEgZnVua2NqaSBkbyBwcm90b3R5cHUga29uc3RydWt0b3JhIChzdGFyYSBtZXRvZGEgemFwaXN1IC0gYmV6IHXFvHljaWEga2xhcylcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuY29uc29sZS5sb2coJy0tLS0tLS0tLS0nKTtcclxuXHJcbmNsYXNzIEJhc2ljVmVoaWNsZSB7XHJcblx0ZHJpdmUoKSB7XHJcblx0XHRjb25zb2xlLmxvZygnRHJpdmluZycpO1xyXG5cdH1cclxufVxyXG5cclxuY2xhc3MgU3VwZXJWZWhpY2xlIGV4dGVuZHMgQmFzaWNWZWhpY2xlIHtcclxuXHRicmFrZSgpIHtcclxuXHRcdGNvbnNvbGUubG9nKCdCcmFraW5nJyk7XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBiYXNpY0NhciA9IG5ldyBCYXNpY1ZlaGljbGUoKTtcclxuY29uc3Qgc3VwZXJDYXIgPSBuZXcgU3VwZXJWZWhpY2xlKCk7XHJcbnN1cGVyQ2FyLmJyYWtlKCk7XHJcbi8vIGJhc2ljQ2FyLmJyYWtlKCk7IC8vIG1ldG9kYS9mdW5rY2phICdicmFrZScgbmllIGlzdG5pZWplIHcgb2JpZWtjaWUgYmFzaWNDYXJcclxuXHJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuY29uc29sZS5sb2coJy0tLS0tLS0tLS0nKTtcclxuXHJcbmNvbnN0IHZlaGljbGUxMCA9IHtcclxuXHRkcml2ZSgpIHtcclxuXHRcdGNvbnNvbGUubG9nKCdEcml2aW5nJyk7XHJcblx0fSxcclxufTtcclxuXHJcbmNvbnN0IGNhcjEwID0gT2JqZWN0LmNyZWF0ZSh2ZWhpY2xlMTApO1xyXG5jYXIxMC5kcml2ZSgpO1xyXG5cclxuY29uc3QgY2FyMTEgPSB7fTtcclxuT2JqZWN0LnNldFByb3RvdHlwZU9mKGNhcjExLCB2ZWhpY2xlMTApO1xyXG5jYXIxMS5kcml2ZSgpO1xyXG4iXX0=
